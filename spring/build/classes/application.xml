<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 配置Bean -->
	<!-- 该方式是通过默认的构造器(无参数的构造器)利用反射技术实现的 -->
	<!-- 
		class:bean的全类名
		ClassPathXMLApplicationContext:是ApplicationContext接口的实现类，该实现类从类路径下加载配置文件
	 -->
	<bean id="HelloWorld" class="com.hephec.spring.HelloWorld">
		<!-- 通过setter方法注入 -->
		<property name="name" value="Spring"></property>
	</bean>
	<!-- 
		构造方法注入
		通过构造方法来配置bean的属性
	 -->
	 <bean id="car" class="com.hephec.spring.Car">
	 	<!-- 
	 		使用构造器注入属性可以指定参数的位置和参数的类型，以区分重载的类型
	 	 -->
	 	<constructor-arg index="0" value="Audi"></constructor-arg>
	 	<constructor-arg index="1" value="Shanghai"></constructor-arg>
	 	<constructor-arg index="2" value="3000" type="double"></constructor-arg>
	 </bean>
	 
	 <bean id="car2" class="com.hephec.spring.Car">
	 	<constructor-arg index="0" value="BMW"></constructor-arg>
	 	<constructor-arg index="1" >
	 		<!-- 如果字面值包含特殊字符可以使用，使用CDATA包裹起来 -->
	 		<value><![CDATA[<Shanghai>]]></value>
	 	</constructor-arg>
	 	<constructor-arg index="2">
	 		<value>240</value>
	 	</constructor-arg>
	 </bean>
	 
	 <bean id="person" class="com.hephec.spring.Person">
	 	<!-- 内部Bean 不能被外部使用，只能在内部使用-->
		<!--  <property name="car">
			<bean class="om.hephec.spring.Car">
				<constructor-arg value="Ford"></constructor-arg>
				<constructor-arg value="53"></constructor-arg>
				<constructor-arg value="32"></constructor-arg>
			</bean>
		</property>-->
	 	<property name="name" value="张三"></property>
	 	<property name="age" value="12"></property>
	 	<!-- 可以property的ref属性建立bean之间的引用关系 -->
	 	<property name="car" ref="car2"></property>
	 	<!-- null值和级联属性 -->
	 	<!-- 注意属性需要先初始化后才可以为级联属性赋值，否则有异常，和struts2不同 -->
	 	
	 </bean>
	 
	 <!-- 测试如何配置集合属性 
	 	使用list节点为集合属性
	 	
	 -->
	 <!-- <bean id="person3" class="com.hephec.spring.collection.Person">
	 	<property name="name" value="mike"></property>
	 	<property name="age" value="23"></property>
	 	<property name="car">
	 		<list>
	 			<ref bean="car"/>
	 			<ref bean="car2"/>
	 			<ref bean="car"/>
	 		</list>
	 	</property>
	 </bean>
	 -->
	 <!--
	 	使用map标签定义
	  <bean id="person3" class="com.hephec.spring.collection.Person">
	 	<property name="name" value="mike"></property>
	 	<property name="age" value="23"></property>
	 	<property name="car">
	 		<map>
	 			<entry key="AA" value-ref="car"/>
	 			<entry key="BB" value-ref="car"/>
	 		</map>
	 	</property>
	 </bean>
	 -->
	 <!-- 
	 	配置Properties属性值
	 	使用props和prop子节点来为Properties属性赋值
	  -->
	  <bean id="datasource" class="com.hephec.spring.DataSource">
	  	<property name="prop">
	  		<props>
	  			<prop key="user">root</prop>
	  			<prop key="password">1230</prop>
	  			<prop key="url">jdbc:mysq:///test</prop>
	  			<prop key="driverClass">com.mysql.jdbc.Driver</prop>
	  		</props>
	  	</property>
	  </bean>
	  
	  <!-- 配置独立的集合bean，以供多个bean进行引用 
	  	需要导入util命名空间
	  	<uitl:list id="card">
	  		<ref bean="car"/>
	  		<ref bean="car"/>
	  	</util:list>
	  -->
	 <!-- 使用p命名空间
	 	简化bean的配置，需要先导入p命名空间
	  -->
</beans>
